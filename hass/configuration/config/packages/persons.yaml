device_tracker:
  platform: mqtt
  devices:
    dimitri_schluessel: 'location/dimitri_keys'
    sabrina_schluessel: 'location/sabrina_keys'
  source_type: bluetooth_le

sensor:
  - platform: mqtt_room
    device_id: cd1381f62e7d
    name: 'Dimitri'
    state_topic: 'room_presence'
    timeout: 5
    away_timeout: 300

  - platform: mqtt_room
    device_id: f913395bc892
    name: 'Sabrina'
    state_topic: 'room_presence'
    timeout: 5
    away_timeout: 300

  - platform: template
    sensors:
      dimitri_home:
        friendly_name: "Dimitri Home Status"
        value_template: >-
          {% if is_state('input_select.dimitri_presence', 'zu Hause') or is_state('input_select.dimitri_presence', 'gerade angekommen') %}
            home
          {% elif is_state('input_select.dimitri_presence', 'gerade gegangen') or is_state('input_select.dimitri_presence', 'weg') or is_state('input_select.dimitri_presence', 'lange weg') %}
            away
          {% else %}
            error
          {% endif %}
        entity_picture_template: >-
          {% if is_state('input_select.dimitri_presence', 'zu Hause') or is_state('input_select.dimitri_presence', 'gerade angekommen') %}
            /local/presence/dimitri_home.jpg  
          {% elif is_state('input_select.dimitri_presence', 'gerade gegangen') or is_state('input_select.dimitri_presence', 'weg') or is_state('input_select.dimitri_presence', 'lange weg') %}
            /local/presence/dimitri_away.jpg
          {% endif %}
      dimitri_phone_battery:
        friendly_name: 'Dimitri Handy Akku'
        unit_of_measurement: '%'
        value_template: >
          {{ state_attr('device_tracker.dimitri_phone_app','battery_level') | int | round(0) }}
        device_class: battery
      sabrina_home:
        friendly_name: "Sabrina Home Status"
        value_template: >-
          {% if is_state('input_select.sabrina_presence', 'zu Hause') or is_state('input_select.sabrina_presence', 'gerade angekommen') %}
            home
          {% elif is_state('input_select.sabrina_presence', 'gerade gegangen') or is_state('input_select.sabrina_presence', 'weg') or is_state('input_select.sabrina_presence', 'lange weg') %}
            away
          {% else %}
            error
          {% endif %}
        entity_picture_template: >-
          {% if is_state('input_select.sabrina_presence', 'zu Hause') or is_state('input_select.sabrina_presence', 'gerade angekommen') %}
            /local/presence/sabrina_home.jpg  
          {% elif is_state('input_select.sabrina_presence', 'gerade gegangen') or is_state('input_select.sabrina_presence', 'weg') or is_state('input_select.sabrina_presence', 'lange weg') %}
            /local/presence/sabrina_away.jpg
          {% endif %}
      sabrina_phone_battery:
        friendly_name: 'Sabrina Handy Akku'
        unit_of_measurement: '%'
        value_template: >
          {{ state_attr('device_tracker.dimitri_phone_app','battery_level') | int | round(0) }}
        device_class: battery

  - platform: swiss_public_transport
    name: Dimitri Verbindungen zur Arbeit
    from: "Näfels-Mollis"
    to: "Zürich Oerlikon"
  - platform: swiss_public_transport
    name: Dimitri Verbindungen nach Hause
    from: "Zürich Oerlikon"
    to: "Näfels-Mollis"

  - platform: template
    sensors:
      next_train_from_home_to_work:
        friendly_name: "Nächster Zug zur Arbeit"
        value_template: '{{ as_timestamp(states.sensor.dimitri_verbindungen_zur_arbeit.attributes.next_departure)| timestamp_custom("%H:%M", True) }}'
      next_but_one_train_from_home_to_work:
        friendly_name: "Übernächster Zug zur Arbeit"
        value_template: '{{ as_timestamp(states.sensor.dimitri_verbindungen_zur_arbeit.attributes.next_on_departure)| timestamp_custom("%H:%M", True) }}'
      next_train_from_work_to_home:
        friendly_name: "Nächster Zug nach Hause"
        value_template: '{{ as_timestamp(states.sensor.dimitri_verbindungen_nach_hause.attributes.next_departure)| timestamp_custom("%H:%M", True) }}'
      next_but_one_train_from_work_to_home:
        friendly_name: "Übernächster Zug nach Hause"
        value_template: '{{ as_timestamp(states.sensor.dimitri_verbindungen_nach_hause.attributes.next_on_departure)| timestamp_custom("%H:%M", True) }}'

input_select:
  dimitri_presence:
    name: Dimitri
    options:
      - zu Hause
      - gerade angekommen
      - gerade gegangen
      - weg
      - lange weg
    initial: zu Hause
  sabrina_presence:
    name: Sabrina
    options:
      - zu Hause
      - gerade angekommen
      - gerade gegangen
      - weg
      - lange weg
    initial: zu Hause

input_datetime:
  dimitri_wecker:
    name: Dimitri Wecker
    has_date: true
    has_time: true
  sabrina_wecker:
    name: Sabrina Wecker
    has_date: true
    has_time: true
    
input_boolean:
  ongoing_call_dimitri:
    name: Dimitri telefoniert
    initial: False
  charging_phone_dimitri:
    name: Dimitri lädt Handy
    initial: False
  ongoing_call_sabrina:
    name: Sabrina telefoniert
    initial: False
  charging_phone_sabrina:
    name: Sabrina lädt Handy
    initial: False