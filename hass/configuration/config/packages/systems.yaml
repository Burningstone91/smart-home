sensor:
  - platform: synologydsm
    host: !secret nas_ip
    username: !secret nas_username
    password: !secret nas_password
    monitored_conditions:
      - cpu_total_load
      - memory_total_real
      - memory_real_usage
      - disk_status
      - disk_temp
      - volume_size_used
      - volume_percentage_used
      
  - platform: glances
    name: NUC
    host: !secret host_ip
    version: 3
    resources:
      - 'processor_load'
      - 'disk_use'
      - 'disk_use_percent'
      - 'memory_use'
      - 'memory_use_percent'
      - 'cpu_use_percent'
      - 'cpu_temp'
      - 'docker_cpu_use'

  - platform: uptime
    name: HASS uptime
    unit_of_measurement: hours
    
  # versions installed and available
  - platform: version
    name: HASS Available
    source: docker
    beta: true

  - platform: version
    name: HASS Installed

  - platform: command_line
    name: AppDaemon Available
    command: >-
      curl -L
      -H "User-Agent: Home Assistant"
      -H "Content-Type: application/json"
      https://pypi.python.org/pypi/appdaemon/json
    value_template: '{{ value_json.info.version }}'
    scan_interval: 3600


switch:
  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/appdaemon
    name: AppDaemon
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/grafana
    name: Grafana
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/ha-dockermon
    name: Dockermon
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/hass
    name: HASS
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/influxdb
    name: InfluxDB
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/mqtt
    name: MQTT
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/deconz
    name: Deconz
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'  

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/letsencrypt
    name: NGINX
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}' 

  - platform: rest
    username: !secret ha-dockermon_user
    password: !secret ha-dockermon_key
    resource: http://192.168.0.5:8126/container/glances
    name: Glances
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'     