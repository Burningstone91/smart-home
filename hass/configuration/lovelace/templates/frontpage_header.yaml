# Card 
type: entities
style: |
  ha-card {
    --ha-card-background: transparant;
    box-shadow: none;
    background: var(--primary-color);
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
  }
  .card-content {
    padding: 0
  }
entities:
  - type: custom:hui-vertical-stack-card
    cards:
      - type: horizontal-stack
        cards:
          - type: markdown
            style: |
              ha-card {
                box-shadow: none;
                height: 33px;
                background: none;
                padding: 0px 10px;
                color: var(--header-color);
              }
            content: | 
              ## {{ states('input_select.frontend_greeting') }}
          - !include
            - button_header_badge.yaml
            - icon: mdi:door
              background_color: "[[[ if (states['sensor.current_doors_open'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
              badge: "[[[ if (states['sensor.current_doors_open'].state < 1) return '&nbsp;'; else return states['sensor.current_doors_open'].state ]]]"
              size: 100%
              entity: group.all_door_sensors
          - !include
            - button_header_badge.yaml
            - icon: mdi:window-closed
              background_color: "[[[ if (states['sensor.current_windows_open'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
              badge: "[[[ if (states['sensor.current_windows_open'].state < 1) return '&nbsp;'; else return states['sensor.current_windows_open'].state ]]]"
              entity: group.all_window_sensors
          - !include
            - button_header_badge.yaml
            - icon: mdi:motion-sensor
              background_color: "[[[ if (states['sensor.current_sensors_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
              badge: "[[[ if (states['sensor.current_sensors_on'].state < 1) return '&nbsp;'; else return states['sensor.current_sensors_on'].state ]]]"
              entity: group.all_motion_smoke_sensors
          - !include
            - button_header_failed_badge.yaml
            - icon: mdi:alert
              background_color: "[[[ if (states['sensor.physical_devices_failed'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
              badge: "[[[ if (states['sensor.physical_devices_failed'].state < 1) return '&nbsp;'; else return states['sensor.physical_devices_failed'].state ]]]"
              entity: group.all_physical_devices
          - !include ../includes/blank-card.yaml  
      - type: horizontal-stack
        cards:
          - !include ../includes/blank-card.yaml
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmanlage
                state: disarmed
            card:
              type: custom:swipe-card
              parameters:
                effect: 'coverflow'
                allowTouchMove: true
                grabCursor: true
                autoplay:
                  disableOnInteraction: false
              cards:
                !include ../notifications/notifications.yaml
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmanlage
                state_not: disarmed
            card:
              type: custom:swipe-card
              parameters:
                effect: 'coverflow'
                allowTouchMove: true
                grabCursor: true
                autoplay:
                  disableOnInteraction: false
              cards:
                # Alarm Triggered
                - type: conditional
                  conditions:
                    - entity: alarm_control_panel.alarmanlage
                      state: "triggered"
                  card:
                    !include
                    - notification_template.yaml
                    - entity: input_boolean.notification_alarm
                      icon: mdi:alert 
                      name: ALARM! ALARM! ALARM!
                # Alarm Armed
                - !include
                  - notification_template.yaml
                  - entity: input_boolean.notification_alarm
                    icon: mdi:alert
                    name: ACHTUNG der Alarm ist scharf
          - type: custom:button-card
            name: Home
            icon: "[[[ if (states['alarm_control_panel.alarmanlage'].state == 'disarmed') return 'mdi:lock-open'; else return 'mdi:lock-alert'; ]]]"
            size: 75%
            color: auto
            entity: input_boolean.dummy1
            show_name: false
            show_state: false
            show_label: false
            hold_action:
              action: none
            tap_action:
              action: navigate
              navigation_path: '/lovelace/alarm'
              haptic: light
            styles:
              card:
                - --ha-card-background: Gray
                - border-radius: 50%
                - box-shadow: none
                - width: 30px
                - height: 30px
              img_cell:
                - align-self: start
                - text-align: start
            state:
              - value: "off"
                styles:
                  icon:
                    - color: "[[[ if (states['alarm_control_panel.alarmanlage'].state == 'disarmed') return 'LimeGreen'; if (states['alarm_control_panel.alarmanlage'].state == 'armed_home') return 'Orange'; else return 'DarkRed'; ]]]"
          - !include ../includes/blank-card.yaml